[pytest]
# Test discovery patterns
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Command line options
addopts =
    --verbose
    --strict-markers
    --cov=src
    --cov=server.py
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml:coverage.xml
    --cov-fail-under=60
    --asyncio-mode=auto
    --tb=short
    --disable-warnings
    -p no:warnings

# Test markers
markers =
    unit: Unit tests (fast, isolated, no external dependencies)
    integration: Integration tests (require external services, slower)
    e2e: End-to-end tests (full workflow tests, slowest)
    slow: Slow running tests (can be excluded with -m "not slow")
    requires_db: Tests that require database connection
    requires_redis: Tests that require Redis connection
    requires_api: Tests that require external API access
    smoke: Smoke tests (quick sanity checks)
    regression: Regression tests for bug fixes
    security: Security-focused tests
    performance: Performance and load tests
    benchmark: Performance benchmark tests
    critical: Critical functionality tests (health scoring, etc.)

# Async configuration
asyncio_mode = auto

# Coverage configuration
[coverage:run]
source = src,server.py
omit =
    */tests/*
    */test_*.py
    */__pycache__/*
    */migrations/*
    */venv/*
    */virtualenv/*
    */.venv/*
    */conftest.py
branch = True
parallel = True

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod
    @abc.abstractmethod
    pass
    \.\.\.$

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml

# Logging configuration for tests
log_cli = False
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests/logs/pytest.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(name)s - %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# Timeout configuration (prevent hanging tests)
timeout = 300
timeout_method = thread

# Minimum Python version
minversion = 3.9
