name: Tests

# Run tests on all pushes and pull requests
on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest

    # Test matrix: Python 3.10, 3.11, 3.12
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    # Service containers for PostgreSQL and Redis
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: csops_test
          POSTGRES_PASSWORD: test_password_123
          POSTGRES_DB: cs_mcp_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7-alpine
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest-cov codecov

      - name: Configure test environment
        run: |
          cp .env.example .env
          # Override with test database settings
          echo "DATABASE_URL=postgresql://csops_test:test_password_123@localhost:5432/cs_mcp_test" >> .env
          echo "REDIS_URL=redis://localhost:6379/0" >> .env
          echo "ENVIRONMENT=test" >> .env
          echo "LOG_LEVEL=DEBUG" >> .env

      - name: Run database migrations
        run: |
          # Run Alembic migrations if they exist
          if [ -d "migrations" ]; then
            alembic upgrade head || echo "No migrations to run"
          fi
        env:
          DATABASE_URL: postgresql://csops_test:test_password_123@localhost:5432/cs_mcp_test

      - name: Run tests with coverage
        run: |
          pytest tests/ \
            --cov=src \
            --cov-report=xml \
            --cov-report=html \
            --cov-report=term-missing \
            --cov-fail-under=80 \
            -v \
            --tb=short \
            --maxfail=5
        env:
          DATABASE_URL: postgresql://csops_test:test_password_123@localhost:5432/cs_mcp_test
          REDIS_URL: redis://localhost:6379/0
          ENVIRONMENT: test
          PYTEST_TIMEOUT: 300

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false
          verbose: true

      - name: Upload coverage HTML report
        if: matrix.python-version == '3.11' && always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/
          retention-days: 30

      - name: Check coverage threshold
        if: always()
        run: |
          coverage report --fail-under=80 || \
          echo "::error::Code coverage is below 80% threshold"
